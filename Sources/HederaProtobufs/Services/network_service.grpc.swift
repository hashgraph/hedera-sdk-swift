//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: network_service.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


///*
/// The requests and responses for different network services.
///
/// Usage: instantiate `Proto_NetworkServiceClient`, then call methods of this protocol to make API calls.
public protocol Proto_NetworkServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? { get }

  func getVersionInfo(
    _ request: Proto_Query,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Query, Proto_Response>

  func getExecutionTime(
    _ request: Proto_Query,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Query, Proto_Response>

  func uncheckedSubmit(
    _ request: Proto_Transaction,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Transaction, Proto_TransactionResponse>

  func getAccountDetails(
    _ request: Proto_Query,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Query, Proto_Response>
}

extension Proto_NetworkServiceClientProtocol {
  public var serviceName: String {
    return "proto.NetworkService"
  }

  ///*
  /// Retrieves the active versions of Hedera Services and HAPI proto
  ///
  /// - Parameters:
  ///   - request: Request to send to getVersionInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getVersionInfo(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Query, Proto_Response> {
    return self.makeUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getVersionInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetVersionInfoInterceptors() ?? []
    )
  }

  ///*
  /// Retrieves the time in nanoseconds spent in <tt>handleTransaction</tt> for one or more 
  /// TransactionIDs (assuming they have reached consensus "recently", since only a limited 
  /// number of execution times are kept in-memory, depending on the value of the node-local 
  /// property <tt>stats.executionTimesToTrack</tt>).
  ///
  /// - Parameters:
  ///   - request: Request to send to getExecutionTime.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getExecutionTime(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Query, Proto_Response> {
    return self.makeUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getExecutionTime.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetExecutionTimeInterceptors() ?? []
    )
  }

  ///*
  /// Submits a "wrapped" transaction to the network, skipping its standard prechecks. (Note that
  /// the "wrapper" <tt>UncheckedSubmit</tt> transaction is still subject to normal prechecks,
  /// including an authorization requirement that its payer be either the treasury or system admin
  /// account.)
  ///
  /// - Parameters:
  ///   - request: Request to send to uncheckedSubmit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func uncheckedSubmit(
    _ request: Proto_Transaction,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Transaction, Proto_TransactionResponse> {
    return self.makeUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.uncheckedSubmit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeuncheckedSubmitInterceptors() ?? []
    )
  }

  ///*
  /// Get all the information about an account, including balance and allowances. This does not get the list of
  /// account records.
  ///
  /// - Parameters:
  ///   - request: Request to send to getAccountDetails.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccountDetails(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Query, Proto_Response> {
    return self.makeUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getAccountDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetAccountDetailsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Proto_NetworkServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Proto_NetworkServiceNIOClient")
public final class Proto_NetworkServiceClient: Proto_NetworkServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the proto.NetworkService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Proto_NetworkServiceNIOClient: Proto_NetworkServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the proto.NetworkService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

///*
/// The requests and responses for different network services.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Proto_NetworkServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? { get }

  func makeGetVersionInfoCall(
    _ request: Proto_Query,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Query, Proto_Response>

  func makeGetExecutionTimeCall(
    _ request: Proto_Query,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Query, Proto_Response>

  func makeUncheckedSubmitCall(
    _ request: Proto_Transaction,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Transaction, Proto_TransactionResponse>

  func makeGetAccountDetailsCall(
    _ request: Proto_Query,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Query, Proto_Response>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Proto_NetworkServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Proto_NetworkServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetVersionInfoCall(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Query, Proto_Response> {
    return self.makeAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getVersionInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetVersionInfoInterceptors() ?? []
    )
  }

  public func makeGetExecutionTimeCall(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Query, Proto_Response> {
    return self.makeAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getExecutionTime.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetExecutionTimeInterceptors() ?? []
    )
  }

  public func makeUncheckedSubmitCall(
    _ request: Proto_Transaction,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Transaction, Proto_TransactionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.uncheckedSubmit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeuncheckedSubmitInterceptors() ?? []
    )
  }

  public func makeGetAccountDetailsCall(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Query, Proto_Response> {
    return self.makeAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getAccountDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetAccountDetailsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Proto_NetworkServiceAsyncClientProtocol {
  public func getVersionInfo(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Response {
    return try await self.performAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getVersionInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetVersionInfoInterceptors() ?? []
    )
  }

  public func getExecutionTime(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Response {
    return try await self.performAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getExecutionTime.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetExecutionTimeInterceptors() ?? []
    )
  }

  public func uncheckedSubmit(
    _ request: Proto_Transaction,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_TransactionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.uncheckedSubmit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeuncheckedSubmitInterceptors() ?? []
    )
  }

  public func getAccountDetails(
    _ request: Proto_Query,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Response {
    return try await self.performAsyncUnaryCall(
      path: Proto_NetworkServiceClientMetadata.Methods.getAccountDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetAccountDetailsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Proto_NetworkServiceAsyncClient: Proto_NetworkServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Proto_NetworkServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Proto_NetworkServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getVersionInfo'.
  func makegetVersionInfoInterceptors() -> [ClientInterceptor<Proto_Query, Proto_Response>]

  /// - Returns: Interceptors to use when invoking 'getExecutionTime'.
  func makegetExecutionTimeInterceptors() -> [ClientInterceptor<Proto_Query, Proto_Response>]

  /// - Returns: Interceptors to use when invoking 'uncheckedSubmit'.
  func makeuncheckedSubmitInterceptors() -> [ClientInterceptor<Proto_Transaction, Proto_TransactionResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccountDetails'.
  func makegetAccountDetailsInterceptors() -> [ClientInterceptor<Proto_Query, Proto_Response>]
}

public enum Proto_NetworkServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "NetworkService",
    fullName: "proto.NetworkService",
    methods: [
      Proto_NetworkServiceClientMetadata.Methods.getVersionInfo,
      Proto_NetworkServiceClientMetadata.Methods.getExecutionTime,
      Proto_NetworkServiceClientMetadata.Methods.uncheckedSubmit,
      Proto_NetworkServiceClientMetadata.Methods.getAccountDetails,
    ]
  )

  public enum Methods {
    public static let getVersionInfo = GRPCMethodDescriptor(
      name: "getVersionInfo",
      path: "/proto.NetworkService/getVersionInfo",
      type: GRPCCallType.unary
    )

    public static let getExecutionTime = GRPCMethodDescriptor(
      name: "getExecutionTime",
      path: "/proto.NetworkService/getExecutionTime",
      type: GRPCCallType.unary
    )

    public static let uncheckedSubmit = GRPCMethodDescriptor(
      name: "uncheckedSubmit",
      path: "/proto.NetworkService/uncheckedSubmit",
      type: GRPCCallType.unary
    )

    public static let getAccountDetails = GRPCMethodDescriptor(
      name: "getAccountDetails",
      path: "/proto.NetworkService/getAccountDetails",
      type: GRPCCallType.unary
    )
  }
}

